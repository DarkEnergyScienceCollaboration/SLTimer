language: python

install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  # We did all of that just so that we ccould conda install pymc:
  - conda install -c https://conda.binstar.org/pymc pymc
  # Now we install all the rest of our python dependencies:
  - pip install -r requirements.txt
  - pip install coveralls
  # And finally we set up SLTimer:
  - source setup/setup.sh
  # Set up to run jupyter notebooks:
  - sudo apt-get install texlive-latex-recommended
  - sudo apt-get install texlive-latex-extra
  - sudo apt-get install texlive-fonts-recommended
  - sudo apt-get install chktex
  - sudo apt-get install dvipng
  - conda install jupyter
  - pip install nbconvert

script:
  # Run the unit tests:
  - nosetests -s --with-coverage --cover-package=desc.sltimer
  # Run the demo notebooks:
  # The pycs tutorial seems to take too long...
  # jupyter nbconvert --ExecutePreprocessor.kernel_name=python --ExecutePreprocessor.timeout=600 --to notebook --execute  notebooks/PyCS_Tutorial.ipynb
  - jupyter nbconvert --ExecutePreprocessor.kernel_name=python --ExecutePreprocessor.timeout=600 --to notebook --execute notebooks/SLTimer_Tutorial.ipynb
  - jupyter nbconvert --ExecutePreprocessor.kernel_name=python --ExecutePreprocessor.timeout=600 --to notebook --execute notebooks/SLTimer_TDC2_Example.ipynb
  # Build the docs:
  - sphinx-build -b html -d _build/doctrees . _build/html

after_success:
  - coveralls
